-# Default Menu
- unless content_for?(:header_menu)
  = content_for :header_menu do
    %nav#menu
      %ul.sticky#header_menu
        = layout_li_menu_link 'features'
        = layout_li_menu_link 'help', link_options: { data: { 'no-turbolink' => true } }
        - if request.subdomain == 'my'
          %li.unlogged.signup= link_to 'sign up', my_url('signup'), class: 'no_sticky'
          %li.unlogged= link_to 'login', my_url('login'), class: 'no_sticky'
        - else
          %li.unlogged.signup= link_to 'sign up', layout_url('?p=signup'), class: 'no_sticky', id: 'signup_button'
          %li.unlogged= link_to 'login', layout_url('?p=login'), class: 'no_sticky', id: 'login_button'
        %li.logged{ style: 'display:none;' }= link_to 'My Sites', my_url('/'), class: 'no_sticky'
        %li.logged.logout{ style: 'display:none;', title: "Logout" }
          = link_to my_url('/logout'), class: 'no_sticky' do
            %span= 'Logout'

= yield :header_menu

- if request.subdomain.blank? || request.subdomain == 'docs'
  = content_for :bottom do
    #popup_signup.popup{ style: "display:none" }
      .popup_wrap
        .lights
          .content= render template: '/users/new'
          = link_to "/", class: 'close', onclick: "SublimeVideo.UI.Utils.closePopup(); return false;" do
            %span Close

    #popup_login.popup{ style: "display:none" }
      .popup_wrap
        .lights
          .content= render template: '/users/sessions/new'
          = link_to "/", class: 'close', onclick: "SublimeVideo.UI.Utils.closePopup(); return false;" do
            %span Close
